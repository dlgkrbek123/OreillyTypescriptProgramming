-------------------------------------------------------------------------------------------

함수는 1급객체 (객체처럼 다룰 수 있음)
=> 변수에 할당가능
=> 함수에 매개변수로 전달가능
=> 함수가 함수를 리턴가능

함수의 매개변수는 보통 명시적으로 정의
함수의 리턴 값은 추론해주긴 하지만 명시 가능 (보통 추론을 사용)

parameter는 함수 선언의 일부
argument는 호출할 때 전달하는 데이터 조각

-------------------------------------------------------------------------------------------

?로 선택적 매개변수를 지정가능
필수를 먼저쓰고 선택적 매개변수를 뒤에 입력

// 선택적 매개변수
function log(message: string, userId?: string) {
  let time = new Date().toLocaleTimeString();
  console.log(time, message, userId || 'Not signed in');
}

// 매개변수 기본값
function log(message: string, userId = 'Not signed in') {
  let time = new Date().toLocaleTimeString();
  console.log(time, message, userId || 'Not signed in');
}

log("Page loaded");
log("User signed in", 'da763be');

-------------------------------------------------------------------------------------------

나머지 매개변수
=> arguments로 함수의 가변인자를 처리해왔다.
=> 타입적으로 안전하지 않다.
=> 값들이 any로 추론되며 실제 호출시 에러

function sumVariadic(): number {
  return Array
      .from(arguments)
      .reduce((total, n) => total + n,0)
}

=> 나머지 연산자를 사용

function sumVar(...numbers: number[]):number {
  return numbers.reduce((total, n) => total + n, 0);
}
sumVar(1, 2, 3);

-------------------------------------------------------------------------------------------